//------ VARIABLES -------
//B LED Controller
var HSBType hsbValue
var int redValue
var int greenValue
var int blueValue
var String RGBvalues

//B LED Stored State
var HSBType storedColor
var String storedEffect
var HSBType red  = new HSBType("359,100,100")
var HSBType gray = new HSBType("0,0,59")


//-------- RULES -----------
//=== SECURITY
rule "Puerta 1 or 2 is OPEN"
when
      Item Puerta1 received update OPEN or Item Puerta2 received update OPEN  
then
      BLEDColor.sendCommand("0,0,0")  //LED Controller takes care of HSB to string conversiona
      TabletDisplay.sendCommand("ON") //OFF is taken care by the tablet built-in app (sleep mode in 10 minutes)
      
      if(SecuritySystem.state == ON)
      {
      	sendBroadcastNotification("SECURITY SYSTEM: Puerta OPEN")
      }
end

//=== FIRE SAFETY
rule "Fire Detectors Activate"
when
      Item FireKitchen received update
then
      if(FireKitchen.state == "FIRE DETECTED!")
      {
            BLEDColor.sendCommand("0,0,0")
            sendBroadcastNotification("FIRE SYSTEM: KITCHEN FIRE ACTIVATED")
      }
end

rule "Plancha"
when
      Item Plancha received update ON
then
      createTimer(now.plusSeconds(5), [ |
            Plancha.sendCommand(OFF)
      ])
end

//=== HELPER FUNCTIONS
rule "B LED Controller: Color,Speed,Effect"
when
      Item BLEDColor changed // then read color and send it through BLEDColorStr
then
      hsbValue   = BLEDColor.state as HSBType
      redValue   = hsbValue.red.intValue
      greenValue = hsbValue.green.intValue
      blueValue  = hsbValue.blue.intValue
      RGBvalues  = redValue.toString + ";" + greenValue.toString + ";" + blueValue.toString + ";"
      sendCommand(BLEDColorStr, RGBvalues)
      logInfo("BLEDColor", RGBvalues )
end
